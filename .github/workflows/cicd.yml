name: CICD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  affected:
    name: Affected Automation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout [pr]
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Checkout [main]
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set SHAs [main]
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: main
      - name: Setup Node [14]
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          always-auth: true
          registry-url: 'https://registry.npmjs.org/'
          scope: '@ntersol'
      - name: Cache Configuration
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install
        run: npm install
      - name: Build
        run: npx nx affected --target build --parallel --exclude=starter,storybook --with-deps
      - name: Deploy
        if: ${{ github.event_name != 'pull_request' }}
        run: npx nx affected --target deploy --parallel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish
        run: npx nx publish schematics
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save
        uses: EndBug/add-and-commit@v7
        with:
          message: Auto-generated commit [ci skip]
          committer_name: GitHub Actions
          committer_email: actions@github.com
